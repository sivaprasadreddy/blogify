spring.application.name=blogify
spring.docker.compose.lifecycle-management=start_only
spring.ai.openai.api-key=${OPENAI_API_KEY}

#spring.ai.chat.client.enabled=false
spring.ai.openai.chat.options.model=gpt-4o

spring.ai.openai.chat.options.temperature=0.7
spring.ai.chat.memory.repository.jdbc.initialize-schema=always
spring.ai.chat.memory.repository.jdbc.platform=postgresql
logging.level.org.springframework.ai.chat.client.advisor=DEBUG

#spring.ai.mcp.client.stdio.servers-configuration=classpath:/mcp-servers-config.json
spring.ai.mcp.client.stdio.connections.github.command=docker
spring.ai.mcp.client.stdio.connections.github.args=run,-i,--rm,-e,GITHUB_PERSONAL_ACCESS_TOKEN,ghcr.io/github/github-mcp-server
spring.ai.mcp.client.stdio.connections.github.env.GITHUB_PERSONAL_ACCESS_TOKEN=${GITHUB_PERSONAL_ACCESS_TOKEN}

spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.open-in-view=false
#spring.jpa.hibernate.ddl-auto=update
spring.flyway.baseline-on-migrate=true

## App Config ##
app.gemini-base-url=https://generativelanguage.googleapis.com
app.gemini-api-key=${GEMINI_API_KEY}
app.gemini-model=gemini-2.0-flash
app.gemini-completions-path=/v1beta/openai/chat/completions

app.grok-base-url=https://api.groq.com
app.grok-api-key=${GROQ_API_KEY}
app.grok-model=llama-3.3-70b-versatile
app.grok-completions-path=/openai/v1/chat/completions

#verifier=gemini
verifier=grok
app.verifier-base-url=${app.${verifier}-base-url}
app.verifier-api-key=${app.${verifier}-api-key}
app.verifier-model=${app.${verifier}-model}
app.verifier-completions-path=${app.${verifier}-completions-path}

app.github-repo=sivaprasadreddy/tech-tips
app.github-repo-content-dir=content/posts